name: Build and Push Docker Images

on:
  push:
    branches: [dev, stg, main]
  pull_request:
    branches: [dev, stg, main]

permissions:
  contents: read
  packages: write

env:
  # Batch processing
  BATCH_SIZE: 50
  LOG_LEVEL: DEBUG
  
  # Metadata collection
  STALE_METADATA_THRESHOLD: 30
  
  # Media filtration
  REEL_DRIVER_THRESHOLD: 0.35
  
  # Cleanup automation
  TARGET_ACTIVE_ITEMS: 10
  TRANSFERRED_ITEM_CLEANUP_DELAY: 0
  HUNG_ITEM_CLEANUP_DELAY: 1

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build base image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./containerization/dockerfile.00_base
          tags: |
            at-base:latest
            ghcr.io/${{ github.repository }}/at-base:${{ github.ref_name }}
            ghcr.io/${{ github.repository }}/at-base:${{ github.sha }}
            ghcr.io/${{ github.repository }}/at-base:latest
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BATCH_SIZE=${{ env.BATCH_SIZE }}
            LOG_LEVEL=${{ env.LOG_LEVEL }}
            STALE_METADATA_THRESHOLD=${{ env.STALE_METADATA_THRESHOLD }}
            REEL_DRIVER_THRESHOLD=${{ env.REEL_DRIVER_THRESHOLD }}
            TARGET_ACTIVE_ITEMS=${{ env.TARGET_ACTIVE_ITEMS }}
            TRANSFERRED_ITEM_CLEANUP_DELAY=${{ env.TRANSFERRED_ITEM_CLEANUP_DELAY }}
            HUNG_ITEM_CLEANUP_DELAY=${{ env.HUNG_ITEM_CLEANUP_DELAY }}
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            TRANSMISSION_HOST=${{ secrets.TRANSMISSION_HOST }}
            TRANSMISSION_PORT=${{ secrets.TRANSMISSION_PORT }}
            TRANSMISSION_USER=${{ secrets.TRANSMISSION_USER }}
            TRANSMISSION_PASS=${{ secrets.TRANSMISSION_PASS }}
            TMDB_API_KEY=${{ secrets.TMDB_API_KEY }}
            OMDB_API_KEY=${{ secrets.OMDB_API_KEY }}
            REEL_API_KEY=${{ secrets.REEL_API_KEY }}

      - name: Build and tag RSS Ingest image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./containerization/dockerfile.01_rss_ingest
          tags: |
            ghcr.io/${{ github.repository }}/at-rss-ingest:${{ github.ref_name }}
            ghcr.io/${{ github.repository }}/at-rss-ingest:${{ github.sha }}
            ghcr.io/${{ github.repository }}/at-rss-ingest:latest
          load: true
          cache-from: type=gha

      - name: Build and tag Collect image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./containerization/dockerfile.02_collect
          tags: |
            ghcr.io/${{ github.repository }}/at-collect:${{ github.ref_name }}
            ghcr.io/${{ github.repository }}/at-collect:${{ github.sha }}
            ghcr.io/${{ github.repository }}/at-collect:latest
          load: true
          cache-from: type=gha

      - name: Build and tag Parse image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./containerization/dockerfile.03_parse
          tags: |
            ghcr.io/${{ github.repository }}/at-parse:${{ github.ref_name }}
            ghcr.io/${{ github.repository }}/at-parse:${{ github.sha }}
            ghcr.io/${{ github.repository }}/at-parse:latest
          load: true
          cache-from: type=gha

      - name: Build and tag File Filtration image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./containerization/dockerfile.04_file_filtration
          tags: |
            ghcr.io/${{ github.repository }}/at-file-filtration:${{ github.ref_name }}
            ghcr.io/${{ github.repository }}/at-file-filtration:${{ github.sha }}
            ghcr.io/${{ github.repository }}/at-file-filtration:latest
          load: true
          cache-from: type=gha

      - name: Build and tag Metadata Collection image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./containerization/dockerfile.05_metadata_collection
          tags: |
            ghcr.io/${{ github.repository }}/at-metadata-collection:${{ github.ref_name }}
            ghcr.io/${{ github.repository }}/at-metadata-collection:${{ github.sha }}
            ghcr.io/${{ github.repository }}/at-metadata-collection:latest
          load: true
          cache-from: type=gha

      - name: Build and tag Media Filtration image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./containerization/dockerfile.06_media_filtration
          tags: |
            ghcr.io/${{ github.repository }}/at-media-filtration:${{ github.ref_name }}
            ghcr.io/${{ github.repository }}/at-media-filtration:${{ github.sha }}
            ghcr.io/${{ github.repository }}/at-media-filtration:latest
          load: true
          cache-from: type=gha

      - name: Build and tag Initiation image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./containerization/dockerfile.07_initiation
          tags: |
            ghcr.io/${{ github.repository }}/at-initiation:${{ github.ref_name }}
            ghcr.io/${{ github.repository }}/at-initiation:${{ github.sha }}
            ghcr.io/${{ github.repository }}/at-initiation:latest
          load: true
          cache-from: type=gha

      - name: Build and tag Download Check image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./containerization/dockerfile.08_download_check
          tags: |
            ghcr.io/${{ github.repository }}/at-download-check:${{ github.ref_name }}
            ghcr.io/${{ github.repository }}/at-download-check:${{ github.sha }}
            ghcr.io/${{ github.repository }}/at-download-check:latest
          load: true
          cache-from: type=gha

      - name: Build and tag Transfer image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./containerization/dockerfile.09_transfer
          tags: |
            ghcr.io/${{ github.repository }}/at-transfer:${{ github.ref_name }}
            ghcr.io/${{ github.repository }}/at-transfer:${{ github.sha }}
            ghcr.io/${{ github.repository }}/at-transfer:latest
          load: true
          cache-from: type=gha

      - name: Build and tag Cleanup image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./containerization/dockerfile.10_cleanup
          tags: |
            ghcr.io/${{ github.repository }}/at-cleanup:${{ github.ref_name }}
            ghcr.io/${{ github.repository }}/at-cleanup:${{ github.sha }}
            ghcr.io/${{ github.repository }}/at-cleanup:latest
          load: true
          cache-from: type=gha

      - name: Push all images to GHCR
        if: github.event_name != 'pull_request'
        run: |
          docker push ghcr.io/${{ github.repository }}/at-base:${{ github.ref_name }}
          docker push ghcr.io/${{ github.repository }}/at-base:${{ github.sha }}
          docker push ghcr.io/${{ github.repository }}/at-base:latest
          docker push ghcr.io/${{ github.repository }}/at-rss-ingest:${{ github.ref_name }}
          docker push ghcr.io/${{ github.repository }}/at-rss-ingest:${{ github.sha }}
          docker push ghcr.io/${{ github.repository }}/at-rss-ingest:latest
          docker push ghcr.io/${{ github.repository }}/at-collect:${{ github.ref_name }}
          docker push ghcr.io/${{ github.repository }}/at-collect:${{ github.sha }}
          docker push ghcr.io/${{ github.repository }}/at-collect:latest
          docker push ghcr.io/${{ github.repository }}/at-parse:${{ github.ref_name }}
          docker push ghcr.io/${{ github.repository }}/at-parse:${{ github.sha }}
          docker push ghcr.io/${{ github.repository }}/at-parse:latest
          docker push ghcr.io/${{ github.repository }}/at-file-filtration:${{ github.ref_name }}
          docker push ghcr.io/${{ github.repository }}/at-file-filtration:${{ github.sha }}
          docker push ghcr.io/${{ github.repository }}/at-file-filtration:latest
          docker push ghcr.io/${{ github.repository }}/at-metadata-collection:${{ github.ref_name }}
          docker push ghcr.io/${{ github.repository }}/at-metadata-collection:${{ github.sha }}
          docker push ghcr.io/${{ github.repository }}/at-metadata-collection:latest
          docker push ghcr.io/${{ github.repository }}/at-media-filtration:${{ github.ref_name }}
          docker push ghcr.io/${{ github.repository }}/at-media-filtration:${{ github.sha }}
          docker push ghcr.io/${{ github.repository }}/at-media-filtration:latest
          docker push ghcr.io/${{ github.repository }}/at-initiation:${{ github.ref_name }}
          docker push ghcr.io/${{ github.repository }}/at-initiation:${{ github.sha }}
          docker push ghcr.io/${{ github.repository }}/at-initiation:latest
          docker push ghcr.io/${{ github.repository }}/at-download-check:${{ github.ref_name }}
          docker push ghcr.io/${{ github.repository }}/at-download-check:${{ github.sha }}
          docker push ghcr.io/${{ github.repository }}/at-download-check:latest
          docker push ghcr.io/${{ github.repository }}/at-transfer:${{ github.ref_name }}
          docker push ghcr.io/${{ github.repository }}/at-transfer:${{ github.sha }}
          docker push ghcr.io/${{ github.repository }}/at-transfer:latest
          docker push ghcr.io/${{ github.repository }}/at-cleanup:${{ github.ref_name }}
          docker push ghcr.io/${{ github.repository }}/at-cleanup:${{ github.sha }}
          docker push ghcr.io/${{ github.repository }}/at-cleanup:latest

      - name: Test base image
        run: |
          docker run --rm at-base:latest python --version

      - name: Test RSS ingest image
        run: |
          docker run --rm ghcr.io/${{ github.repository }}/at-rss-ingest:latest --help || echo "RSS ingest image built successfully"