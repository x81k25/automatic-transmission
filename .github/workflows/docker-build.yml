name: Build and Push Docker Images

on:
  push:
    branches: [dev, dev-agent, stg, main]
  pull_request:
    branches: [dev, dev-agent, stg, main]

permissions:
  contents: read
  packages: write

env:
  # Batch processing
  BATCH_SIZE: ${{ vars.BATCH_SIZE || '50' }}
  LOG_LEVEL: ${{ vars.LOG_LEVEL || 'DEBUG' }}
  
  # Metadata collection
  STALE_METADATA_THRESHOLD: ${{ vars.STALE_METADATA_THRESHOLD || '30' }}
  
  # Media filtration
  REEL_DRIVER_THRESHOLD: ${{ vars.REEL_DRIVER_THRESHOLD || '0.35' }}
  
  # Cleanup automation
  TARGET_ACTIVE_ITEMS: ${{ vars.TARGET_ACTIVE_ITEMS || '10' }}
  TRANSFERRED_ITEM_CLEANUP_DELAY: ${{ vars.TRANSFERRED_ITEM_CLEANUP_DELAY || '0' }}
  HUNG_ITEM_CLEANUP_DELAY: ${{ vars.HUNG_ITEM_CLEANUP_DELAY || '1' }}

jobs:
  build-all-images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract base metadata
        id: base-meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/at-base
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha

      - name: Build and push base image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./containerization/dockerfile.00_base
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.base-meta.outputs.tags }}
          labels: ${{ steps.base-meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BATCH_SIZE=${{ env.BATCH_SIZE }}
            LOG_LEVEL=${{ env.LOG_LEVEL }}
            STALE_METADATA_THRESHOLD=${{ env.STALE_METADATA_THRESHOLD }}
            REEL_DRIVER_THRESHOLD=${{ env.REEL_DRIVER_THRESHOLD }}
            TARGET_ACTIVE_ITEMS=${{ env.TARGET_ACTIVE_ITEMS }}
            TRANSFERRED_ITEM_CLEANUP_DELAY=${{ env.TRANSFERRED_ITEM_CLEANUP_DELAY }}
            HUNG_ITEM_CLEANUP_DELAY=${{ env.HUNG_ITEM_CLEANUP_DELAY }}
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            TRANSMISSION_HOST=${{ secrets.TRANSMISSION_HOST }}
            TRANSMISSION_PORT=${{ secrets.TRANSMISSION_PORT }}
            TRANSMISSION_USER=${{ secrets.TRANSMISSION_USER }}
            TRANSMISSION_PASS=${{ secrets.TRANSMISSION_PASS }}
            TMDB_API_KEY=${{ secrets.TMDB_API_KEY }}
            OMDB_API_KEY=${{ secrets.OMDB_API_KEY }}
            REEL_API_KEY=${{ secrets.REEL_API_KEY }}

      # Build all module images
      - name: Extract rss-ingest metadata
        id: rss-ingest-meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/at-rss-ingest
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha

      - name: Build and push rss-ingest image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./containerization/dockerfile.01_rss_ingest
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.rss-ingest-meta.outputs.tags }}
          labels: ${{ steps.rss-ingest-meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BASE_IMAGE=at-base:latest

      - name: Extract collect metadata
        id: collect-meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/at-collect
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha

      - name: Build and push collect image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./containerization/dockerfile.02_collect
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.collect-meta.outputs.tags }}
          labels: ${{ steps.collect-meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BASE_IMAGE=at-base:latest

      - name: Extract parse metadata
        id: parse-meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/at-parse
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha

      - name: Build and push parse image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./containerization/dockerfile.03_parse
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.parse-meta.outputs.tags }}
          labels: ${{ steps.parse-meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BASE_IMAGE=at-base:latest

      - name: Extract file-filtration metadata
        id: file-filtration-meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/at-file-filtration
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha

      - name: Build and push file-filtration image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./containerization/dockerfile.04_file_filtration
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.file-filtration-meta.outputs.tags }}
          labels: ${{ steps.file-filtration-meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BASE_IMAGE=at-base:latest

      - name: Extract metadata-collection metadata
        id: metadata-collection-meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/at-metadata-collection
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha

      - name: Build and push metadata-collection image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./containerization/dockerfile.05_metadata_collection
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.metadata-collection-meta.outputs.tags }}
          labels: ${{ steps.metadata-collection-meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BASE_IMAGE=at-base:latest

      - name: Extract media-filtration metadata
        id: media-filtration-meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/at-media-filtration
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha

      - name: Build and push media-filtration image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./containerization/dockerfile.06_media_filtration
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.media-filtration-meta.outputs.tags }}
          labels: ${{ steps.media-filtration-meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BASE_IMAGE=at-base:latest

      - name: Extract initiation metadata
        id: initiation-meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/at-initiation
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha

      - name: Build and push initiation image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./containerization/dockerfile.07_initiation
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.initiation-meta.outputs.tags }}
          labels: ${{ steps.initiation-meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BASE_IMAGE=at-base:latest

      - name: Extract download-check metadata
        id: download-check-meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/at-download-check
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha

      - name: Build and push download-check image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./containerization/dockerfile.08_download_check
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.download-check-meta.outputs.tags }}
          labels: ${{ steps.download-check-meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BASE_IMAGE=at-base:latest

      - name: Extract transfer metadata
        id: transfer-meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/at-transfer
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha

      - name: Build and push transfer image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./containerization/dockerfile.09_transfer
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.transfer-meta.outputs.tags }}
          labels: ${{ steps.transfer-meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BASE_IMAGE=at-base:latest

      - name: Extract cleanup metadata
        id: cleanup-meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/at-cleanup
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha

      - name: Build and push cleanup image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./containerization/dockerfile.10_cleanup
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.cleanup-meta.outputs.tags }}
          labels: ${{ steps.cleanup-meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BASE_IMAGE=at-base:latest

